{"ast":null,"code":"var _jsxFileName = \"/Users/omeryildiz/Projects/Friendsbook with Express and MongoDB/frontend/src/components/MyVerticallyCenteredModal.js\";\nimport React from 'react';\nimport { Modal } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { updateFirstName, updateLastName, updateAge } from '../actions/UpdateFriendAction';\nimport { submitUpdate } from '../actions/SubmitUpdateAction';\nimport ModalFirstname from './ModalFirstname';\nimport ModalLastname from './ModalLastname';\nimport ModalAge from './ModalAge';\nimport ModalUpdateButton from './ModalUpdateButton';\nimport ModalHeader from './ModalHeader';\nimport ModalFooter from './ModalFooter';\n\nclass MyVerticallyCenteredModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.id = props.id;\n    this.friendList = props.friendList;\n    this.submitUpdate = props.submitUpdate;\n    this.user = this.friendList.filter(usr => usr.id === this.id);\n    this.updateAge = props.updateAge;\n    this.updateFirstName = props.updateFirstName;\n    this.updateLastName = props.updateLastName;\n  }\n\n  static get propTypes() {\n    return {\n      onHide: PropTypes.func,\n      id: PropTypes.string,\n      friendList: PropTypes.array,\n      updateFirstName: PropTypes.func,\n      updateLastName: PropTypes.func,\n      updateAge: PropTypes.func,\n      submitUpdate: PropTypes.func\n    };\n  }\n\n  render() {\n    console.log(this.user);\n    return React.createElement(Modal, Object.assign({}, this.props, {\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(ModalHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      action: \"\",\n      onSubmit: this.submitUpdate,\n      id: this.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(ModalFirstname, {\n      firstName: this.user[0].firstName,\n      updateFirstName: this.updateFirstName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(ModalLastname, {\n      lastName: this.user[0].lastName,\n      updateLastName: this.updateLastName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(ModalAge, {\n      age: this.user[0].age,\n      updateAge: this.updateAge,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(ModalUpdateButton, {\n      id: this.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }))), React.createElement(ModalFooter, {\n      hide: this.props.onHide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = ({\n  friendList\n}) => ({\n  friendList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateFirstName: e => {\n    dispatch(updateFirstName(e.target.value));\n  },\n  updateLastName: e => {\n    dispatch(updateLastName(e.target.value));\n  },\n  updateAge: e => {\n    dispatch(updateAge(parseInt(e.target.value, 10)));\n  },\n  submitUpdate: e => {\n    e.preventDefault();\n    e.persist();\n    dispatch(submitUpdate(e.target.id));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyVerticallyCenteredModal);","map":{"version":3,"sources":["/Users/omeryildiz/Projects/Friendsbook with Express and MongoDB/frontend/src/components/MyVerticallyCenteredModal.js"],"names":["React","Modal","PropTypes","connect","updateFirstName","updateLastName","updateAge","submitUpdate","ModalFirstname","ModalLastname","ModalAge","ModalUpdateButton","ModalHeader","ModalFooter","MyVerticallyCenteredModal","Component","constructor","props","id","friendList","user","filter","usr","propTypes","onHide","func","string","array","render","console","log","firstName","lastName","age","mapStateToProps","mapDispatchToProps","dispatch","e","target","value","parseInt","preventDefault","persist"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  updateFirstName,\r\n  updateLastName,\r\n  updateAge,\r\n} from '../actions/UpdateFriendAction';\r\nimport { submitUpdate } from '../actions/SubmitUpdateAction';\r\nimport ModalFirstname from './ModalFirstname';\r\nimport ModalLastname from './ModalLastname';\r\nimport ModalAge from './ModalAge';\r\nimport ModalUpdateButton from './ModalUpdateButton';\r\nimport ModalHeader from './ModalHeader';\r\nimport ModalFooter from './ModalFooter';\r\n\r\nclass MyVerticallyCenteredModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.id = props.id;\r\n    this.friendList = props.friendList;\r\n    this.submitUpdate = props.submitUpdate;\r\n    this.user = this.friendList.filter(usr => usr.id === this.id);\r\n    this.updateAge = props.updateAge;\r\n    this.updateFirstName = props.updateFirstName;\r\n    this.updateLastName = props.updateLastName;\r\n  }\r\n\r\n  static get propTypes() {\r\n    return {\r\n      onHide: PropTypes.func,\r\n      id: PropTypes.string,\r\n      friendList: PropTypes.array,\r\n      updateFirstName: PropTypes.func,\r\n      updateLastName: PropTypes.func,\r\n      updateAge: PropTypes.func,\r\n      submitUpdate: PropTypes.func,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    console.log(this.user);\r\n    return (\r\n      <Modal\r\n        {...this.props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <ModalHeader />\r\n\r\n        <Modal.Body>\r\n          <form action=\"\" onSubmit={this.submitUpdate} id={this.id}>\r\n            <ModalFirstname\r\n              firstName={this.user[0].firstName}\r\n              updateFirstName={this.updateFirstName}\r\n            />\r\n            <ModalLastname\r\n              lastName={this.user[0].lastName}\r\n              updateLastName={this.updateLastName}\r\n            />\r\n            <ModalAge age={this.user[0].age} updateAge={this.updateAge} />\r\n            <ModalUpdateButton id={this.id} />\r\n          </form>\r\n        </Modal.Body>\r\n\r\n        <ModalFooter hide={this.props.onHide} />\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ friendList }) => ({\r\n  friendList,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateFirstName: e => {\r\n    dispatch(updateFirstName(e.target.value));\r\n  },\r\n  updateLastName: e => {\r\n    dispatch(updateLastName(e.target.value));\r\n  },\r\n  updateAge: e => {\r\n    dispatch(updateAge(parseInt(e.target.value, 10)));\r\n  },\r\n  submitUpdate: e => {\r\n    e.preventDefault();\r\n    e.persist();\r\n    dispatch(submitUpdate(e.target.id));\r\n  },\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MyVerticallyCenteredModal);\r\n"]},"metadata":{},"sourceType":"module"}