{"ast":null,"code":"var _jsxFileName = \"/Users/omeryildiz/Projects/Friendsbook with Express and MongoDB/frontend/src/components/MyVerticallyCenteredModal.js\";\nimport React from 'react';\nimport { Modal, Form, Col, Row, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { updateFirstName, updateLastName, updateAge } from '../actions/UpdateFriendAction';\nimport { submitUpdate } from '../actions/SubmitUpdateAction'; // import ModalFirstname from './ModalFirstname';\n// import ModalLastname from './ModalLastname';\n// import ModalAge from './ModalAge';\n// import ModalUpdateButton from './ModalUpdateButton';\n\nimport ModalHeader from './ModalHeader';\nimport ModalFooter from './ModalFooter';\n\nclass MyVerticallyCenteredModal extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      friendList: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/friends/').then(res => {\n      if (res.data.length > 0) {\n        this.setState({\n          friendList: res.data\n        });\n      }\n    });\n  }\n\n  render() {\n    const {\n      id,\n      submitUpdate,\n      updateAge,\n      updateFirstName,\n      updateLastName,\n      onClick\n    } = this.props;\n    const friend = this.state.friendList.filter(friend => friend._id === id);\n    return React.createElement(Modal, Object.assign({}, this.props, {\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(ModalHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      action: \"\",\n      onSubmit: submitUpdate,\n      id: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formPlaintextPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Firstname\"), React.createElement(Col, {\n      sm: \"10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"firstname\",\n      placeholder: friend.firstname,\n      onChange: updateFirstName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formPlaintextPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Lastname\"), React.createElement(Col, {\n      sm: \"10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"lastname\",\n      placeholder: friend.lastName,\n      onChange: updateLastName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Row,\n      controlId: \"formPlaintextPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Age\"), React.createElement(Col, {\n      sm: \"10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"lastname\",\n      placeholder: friend.age,\n      onChange: updateAge,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }))), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      onClick: onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Update\"))), React.createElement(ModalFooter, {\n      hide: this.props.onHide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = ({\n  friendList\n}) => ({\n  friendList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateFirstName: e => {\n    dispatch(updateFirstName(e.target.value));\n  },\n  updateLastName: e => {\n    dispatch(updateLastName(e.target.value));\n  },\n  updateAge: e => {\n    dispatch(updateAge(parseInt(e.target.value, 10)));\n  },\n  submitUpdate: e => {\n    e.preventDefault();\n    e.persist();\n    dispatch(submitUpdate(e.target.id));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyVerticallyCenteredModal);","map":{"version":3,"sources":["/Users/omeryildiz/Projects/Friendsbook with Express and MongoDB/frontend/src/components/MyVerticallyCenteredModal.js"],"names":["React","Modal","Form","Col","Row","Button","connect","axios","updateFirstName","updateLastName","updateAge","submitUpdate","ModalHeader","ModalFooter","MyVerticallyCenteredModal","Component","state","friendList","componentDidMount","get","then","res","data","length","setState","render","id","onClick","props","friend","filter","_id","firstname","lastName","age","onHide","mapStateToProps","mapDispatchToProps","dispatch","e","target","value","parseInt","preventDefault","persist"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Modal, Form, Col, Row, Button } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport {\r\n  updateFirstName,\r\n  updateLastName,\r\n  updateAge,\r\n} from '../actions/UpdateFriendAction';\r\nimport { submitUpdate } from '../actions/SubmitUpdateAction';\r\n// import ModalFirstname from './ModalFirstname';\r\n// import ModalLastname from './ModalLastname';\r\n// import ModalAge from './ModalAge';\r\n// import ModalUpdateButton from './ModalUpdateButton';\r\nimport ModalHeader from './ModalHeader';\r\nimport ModalFooter from './ModalFooter';\r\n\r\nclass MyVerticallyCenteredModal extends React.Component {\r\n\r\n  state = {\r\n    friendList: [],\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('http://localhost:5000/friends/').then(res => {\r\n      if (res.data.length > 0) {\r\n        this.setState({\r\n          friendList: res.data\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { id, submitUpdate, updateAge, updateFirstName, updateLastName, onClick } = this.props\r\n    const friend = this.state.friendList.filter(friend => friend._id === id)\r\n    return (\r\n      <Modal\r\n        {...this.props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <ModalHeader />\r\n\r\n        <Modal.Body>\r\n          <form action=\"\" onSubmit={submitUpdate} id={id}>\r\n            <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n              <Form.Label column sm=\"2\">\r\n                Firstname\r\n    </Form.Label>\r\n              <Col sm=\"10\">\r\n                <Form.Control\r\n                  type=\"firstname\"\r\n                  placeholder={friend.firstname}\r\n                  onChange={updateFirstName}\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n            {/* <ModalLastname\r\n              lastName={friend.lastname}\r\n              updateLastName={updateLastName}\r\n            /> */}\r\n\r\n            <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n              <Form.Label column sm=\"2\">\r\n                Lastname\r\n    </Form.Label>\r\n              <Col sm=\"10\">\r\n                <Form.Control\r\n                  type=\"lastname\"\r\n                  placeholder={friend.lastName}\r\n                  onChange={updateLastName}\r\n                />\r\n              </Col>\r\n            </Form.Group>\r\n            {/* <ModalAge age={friend.age} updateAge={updateAge} /> */}\r\n            <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n              <Form.Label column sm=\"2\">\r\n                Age\r\n            </Form.Label>\r\n              <Col sm=\"10\">\r\n                <Form.Control type=\"lastname\" placeholder={friend.age} onChange={updateAge} />\r\n              </Col>\r\n            </Form.Group>\r\n            {/* <ModalUpdateButton id={id} /> */}\r\n            <Button variant=\"primary\" type=\"submit\" onClick={onClick}>\r\n              Update\r\n  </Button>\r\n          </form>\r\n        </Modal.Body>\r\n\r\n        <ModalFooter hide={this.props.onHide} />\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ friendList }) => ({\r\n  friendList,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateFirstName: e => {\r\n    dispatch(updateFirstName(e.target.value));\r\n  },\r\n  updateLastName: e => {\r\n    dispatch(updateLastName(e.target.value));\r\n  },\r\n  updateAge: e => {\r\n    dispatch(updateAge(parseInt(e.target.value, 10)));\r\n  },\r\n  submitUpdate: e => {\r\n    e.preventDefault();\r\n    e.persist();\r\n    dispatch(submitUpdate(e.target.id));\r\n  },\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MyVerticallyCenteredModal);\r\n"]},"metadata":{},"sourceType":"module"}