{"ast":null,"code":"var _jsxFileName = \"/Users/omeryildiz/Projects/Friendsbook with Express and MongoDB/frontend/src/components/FriendsGrid.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { deleteFriend } from '../actions/DeleteFriendAction';\nimport { sortFriends } from '../actions/SortFriendsAction';\nimport Friend from './Friend';\nimport SortButton from './SortButton';\nimport axios from 'axios';\n\nclass FriendsGrid extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      friendList: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/friends/').then(res => {\n      if (res.data.length > 0) {\n        this.setState({\n          friendList: res.data\n        });\n      }\n    });\n  }\n\n  render() {\n    const {\n      deleteFriend,\n      sortFriends\n    } = this.props;\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.state.friendList.map(el => React.createElement(Friend, {\n      id: el._id,\n      key: el._id,\n      name: el.firstName,\n      lastName: el.lastName,\n      age: el.age,\n      deleteFriend: deleteFriend,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })), React.createElement(SortButton, {\n      className: \"sort\",\n      sortFriends: sortFriends,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = ({\n  friendList\n}) => ({\n  friendList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteFriend: e => {\n    e.persist();\n    e.preventDefault();\n    dispatch(deleteFriend(e.target.id));\n  },\n  sortFriends: e => {\n    e.preventDefault();\n    dispatch(sortFriends());\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FriendsGrid);","map":{"version":3,"sources":["/Users/omeryildiz/Projects/Friendsbook with Express and MongoDB/frontend/src/components/FriendsGrid.js"],"names":["React","connect","deleteFriend","sortFriends","Friend","SortButton","axios","FriendsGrid","Component","state","friendList","componentDidMount","get","then","res","data","length","setState","render","props","map","el","_id","firstName","lastName","age","mapStateToProps","mapDispatchToProps","dispatch","e","persist","preventDefault","target","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,+BAA7B;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAN,SAA0BP,KAAK,CAACQ,SAAhC,CAA0C;AAAA;AAAA;AAAA,SAExCC,KAFwC,GAEhC;AACNC,MAAAA,UAAU,EAAE;AADN,KAFgC;AAAA;;AAMxCC,EAAAA,iBAAiB,GAAG;AAClBL,IAAAA,KAAK,CAACM,GAAN,CAAU,gCAAV,EAA4CC,IAA5C,CAAiDC,GAAG,IAAI;AACtD,UAAIA,GAAG,CAACC,IAAJ,CAASC,MAAT,GAAkB,CAAtB,EAAyB;AACvB,aAAKC,QAAL,CAAc;AACZP,UAAAA,UAAU,EAAEI,GAAG,CAACC;AADJ,SAAd;AAGD;AACF,KAND;AAOD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEhB,MAAAA,YAAF;AAAgBC,MAAAA;AAAhB,QAAgC,KAAKgB,KAA3C;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKV,KAAL,CAAWC,UAAX,CAAsBU,GAAtB,CAA0BC,EAAE,IAC3B,oBAAC,MAAD;AACE,MAAA,EAAE,EAAEA,EAAE,CAACC,GADT;AAEE,MAAA,GAAG,EAAED,EAAE,CAACC,GAFV;AAGE,MAAA,IAAI,EAAED,EAAE,CAACE,SAHX;AAIE,MAAA,QAAQ,EAAEF,EAAE,CAACG,QAJf;AAKE,MAAA,GAAG,EAAEH,EAAE,CAACI,GALV;AAME,MAAA,YAAY,EAAEvB,YANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,EAWE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,MAAtB;AAA6B,MAAA,WAAW,EAAEC,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADF;AAeD;;AAlCuC;;AAqC1C,MAAMuB,eAAe,GAAG,CAAC;AAAEhB,EAAAA;AAAF,CAAD,MAAqB;AAC3CA,EAAAA;AAD2C,CAArB,CAAxB;;AAIA,MAAMiB,kBAAkB,GAAIC,QAAD,KAAe;AACxC1B,EAAAA,YAAY,EAAE2B,CAAC,IAAI;AACjBA,IAAAA,CAAC,CAACC,OAAF;AACAD,IAAAA,CAAC,CAACE,cAAF;AACAH,IAAAA,QAAQ,CAAC1B,YAAY,CAAC2B,CAAC,CAACG,MAAF,CAASC,EAAV,CAAb,CAAR;AACD,GALuC;AAMxC9B,EAAAA,WAAW,EAAE0B,CAAC,IAAI;AAChBA,IAAAA,CAAC,CAACE,cAAF;AACAH,IAAAA,QAAQ,CAACzB,WAAW,EAAZ,CAAR;AACD;AATuC,CAAf,CAA3B;;AAYA,eAAeF,OAAO,CACpByB,eADoB,EAEpBC,kBAFoB,CAAP,CAGbpB,WAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { deleteFriend } from '../actions/DeleteFriendAction';\r\nimport { sortFriends } from '../actions/SortFriendsAction';\r\nimport Friend from './Friend';\r\nimport SortButton from './SortButton';\r\nimport axios from 'axios';\r\n\r\nclass FriendsGrid extends React.Component {\r\n\r\n  state = {\r\n    friendList: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('http://localhost:5000/friends/').then(res => {\r\n      if (res.data.length > 0) {\r\n        this.setState({\r\n          friendList: res.data\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { deleteFriend, sortFriends } = this.props\r\n\r\n    return (\r\n      <ul>\r\n        {this.state.friendList.map(el => (\r\n          <Friend\r\n            id={el._id}\r\n            key={el._id}\r\n            name={el.firstName}\r\n            lastName={el.lastName}\r\n            age={el.age}\r\n            deleteFriend={deleteFriend}\r\n          />\r\n        ))}\r\n        <SortButton className=\"sort\" sortFriends={sortFriends} />\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ friendList }) => ({\r\n  friendList,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  deleteFriend: e => {\r\n    e.persist();\r\n    e.preventDefault();\r\n    dispatch(deleteFriend(e.target.id));\r\n  },\r\n  sortFriends: e => {\r\n    e.preventDefault();\r\n    dispatch(sortFriends());\r\n  },\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FriendsGrid);\r\n\r\n"]},"metadata":{},"sourceType":"module"}